[
  {
    "id": 46636054,
    "slug": "dl2oyz",
    "title": "hexo测试",
    "book_id": 20079160,
    "book": {
      "id": 20079160,
      "type": "Book",
      "slug": "ytm2sv",
      "name": "博客",
      "user_id": 8425642,
      "description": "问题的发现与解决",
      "creator_id": 8425642,
      "public": 1,
      "items_count": 4,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-06-05T08:18:53.086Z",
      "updated_at": "2021-06-05T08:18:53.000Z",
      "created_at": "2021-05-23T14:02:43.000Z",
      "namespace": "rainoprime/ytm2sv",
      "user": {
        "id": 8425642,
        "type": "User",
        "login": "rainoprime",
        "name": "RainoPrime",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
        "books_count": 7,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2020-12-21T10:17:57.000Z",
        "updated_at": "2021-06-05T08:12:03.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 8425642,
    "creator": {
      "id": 8425642,
      "type": "User",
      "login": "rainoprime",
      "name": "RainoPrime",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
      "books_count": 7,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-12-21T10:17:57.000Z",
      "updated_at": "2021-06-05T08:12:03.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "---\n\n\n<br />title: hexo测试<br />date: 2021-06-05 12:05:36<br />tags:<br />\n\n- Java<br />categories:\n- [Spring, SpringMvc]\n\n---\n\n<a name=\"df368884\"></a>\n# 前言\n\n\n> 介绍针对拦截器怎么使用232323\n\n```java\n\npackage com.newamahb.newamahb.utils;\n\nimport com.newamahb.newamahb.entity.DbAdminUserEntity;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\n\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * 登录验证\n *\n * @ClassName LoginFilter\n * @Author LiuJinshui\n * @Data 2021/5/24 13:11\n **/\n@Configuration\npublic class LoginFilter implements HandlerInterceptor {\n    /**\n     * 在请求处理之前进行调用（Controller方法调用之前）\n     */\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n//        System.out.println(\"执行了TestInterceptor的preHandle方法\");\n        try {\n            //统一拦截（查询当前session是否存在user）(这里user会在每次登陆成功后，写入session)\n            DbAdminUserEntity user=(DbAdminUserEntity)request.getSession().getAttribute(\"user\");\n            if(user!=null){\n                return true;\n            }\n            response.sendRedirect(request.getContextPath()+\"/\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return false;//如果设置为false时，被请求时，拦截器执行到此处将不会继续操作\n        //如果设置为true时，请求将会继续执行后面的操作\n    }\n\n    /**\n     * 请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）\n     */\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {\n//         System.out.println(\"执行了TestInterceptor的postHandle方法\");\n    }\n\n    /**\n     * 在整个请求结束之后被调用，也就是在DispatcherServlet 渲染了对应的视图之后执行（主要是用于进行资源清理工作）\n     */\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {\n//        System.out.println(\"执行了TestInterceptor的afterCompletion方法\");\n    }\n}\n```\n\n\n```java\npackage com.newamahb.newamahb.utils.config;\n\nimport com.newamahb.newamahb.utils.LoginFilter;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n/**\n * @ClassName LoginConfig\n * @Author LiuJinshui\n * @Data 2021/5/24 13:34\n **/\n@Configuration\npublic class LoginConfig implements WebMvcConfigurer {\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        //注册TestInterceptor拦截器\n        InterceptorRegistration registration = registry.addInterceptor(new LoginFilter());\n        registration.addPathPatterns(\"/**\");                      //所有路径都被拦截\n        registration.excludePathPatterns(               //添加不拦截路径\n                \"/\",                            //首页\n                \"/amahb/login\",            //登录\n                \"/static/**\",            //html静态资源\n                \"/js/**\",              //js静态资源\n                \"/css/**\",             //css静态资源\n                \"/fonts/**\",\n                \"/img/**\",\n                \"/lib/**\",\n                \"/templates/**\"\n        );\n    }\n}\n```\n",
    "body_draft": "---\n\n\n<br />title: hexo测试<br />date: 2021-06-05 12:05:36<br />tags:<br />\n\n- Java<br />categories:\n- [Spring, SpringMvc]\n\n---\n\n<a name=\"df368884\"></a>\n# 前言\n\n\n> 介绍针对拦截器怎么使用232323\n\n```java\n\npackage com.newamahb.newamahb.utils;\n\nimport com.newamahb.newamahb.entity.DbAdminUserEntity;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\n\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * 登录验证\n *\n * @ClassName LoginFilter\n * @Author LiuJinshui\n * @Data 2021/5/24 13:11\n **/\n@Configuration\npublic class LoginFilter implements HandlerInterceptor {\n    /**\n     * 在请求处理之前进行调用（Controller方法调用之前）\n     */\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n//        System.out.println(\"执行了TestInterceptor的preHandle方法\");\n        try {\n            //统一拦截（查询当前session是否存在user）(这里user会在每次登陆成功后，写入session)\n            DbAdminUserEntity user=(DbAdminUserEntity)request.getSession().getAttribute(\"user\");\n            if(user!=null){\n                return true;\n            }\n            response.sendRedirect(request.getContextPath()+\"/\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return false;//如果设置为false时，被请求时，拦截器执行到此处将不会继续操作\n        //如果设置为true时，请求将会继续执行后面的操作\n    }\n\n    /**\n     * 请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）\n     */\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {\n//         System.out.println(\"执行了TestInterceptor的postHandle方法\");\n    }\n\n    /**\n     * 在整个请求结束之后被调用，也就是在DispatcherServlet 渲染了对应的视图之后执行（主要是用于进行资源清理工作）\n     */\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {\n//        System.out.println(\"执行了TestInterceptor的afterCompletion方法\");\n    }\n}\n```\n\n\n```java\npackage com.newamahb.newamahb.utils.config;\n\nimport com.newamahb.newamahb.utils.LoginFilter;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n/**\n * @ClassName LoginConfig\n * @Author LiuJinshui\n * @Data 2021/5/24 13:34\n **/\n@Configuration\npublic class LoginConfig implements WebMvcConfigurer {\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        //注册TestInterceptor拦截器\n        InterceptorRegistration registration = registry.addInterceptor(new LoginFilter());\n        registration.addPathPatterns(\"/**\");                      //所有路径都被拦截\n        registration.excludePathPatterns(               //添加不拦截路径\n                \"/\",                            //首页\n                \"/amahb/login\",            //登录\n                \"/static/**\",            //html静态资源\n                \"/js/**\",              //js静态资源\n                \"/css/**\",             //css静态资源\n                \"/fonts/**\",\n                \"/img/**\",\n                \"/lib/**\",\n                \"/templates/**\"\n        );\n    }\n}\n```\n",
    "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><hr id=\"WLu9I\" class=\"ne-hr\"><p id=\"u9c8c3f34\" class=\"ne-p\"><br></p><p id=\"ue42b6cb9\" class=\"ne-p\"><span class=\"ne-text\">title: hexo测试<br /></span><span class=\"ne-text\">date: 2021-06-05 12:05:36<br /></span><span class=\"ne-text\">tags:</span></p><p id=\"u94dccbdc\" class=\"ne-p\"><br></p><ul class=\"ne-ul\"><li id=\"u1da14126\"><span class=\"ne-text\">Java<br /></span><span class=\"ne-text\">categories:</span></li></ul><ul class=\"ne-ul\"><li id=\"u8b300652\"><span class=\"ne-text\">[Spring, SpringMvc]</span></li></ul><hr id=\"CqpGr\" class=\"ne-hr\"><h1 id=\"df368884\"><span class=\"ne-text\">前言</span></h1><p id=\"ud8a8467e\" class=\"ne-p\"><br></p><div class=\"ne-quote\"><p id=\"uef29bae6\" class=\"ne-p\"><span class=\"ne-text\">介绍针对拦截器怎么使用232323</span></p></div><pre data-language=\"java\" id=\"1fd90e84\" class=\"ne-codeblock\">\npackage com.newamahb.newamahb.utils;\n\nimport com.newamahb.newamahb.entity.DbAdminUserEntity;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\n\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\n\n/**\n * 登录验证\n *\n * @ClassName LoginFilter\n * @Author LiuJinshui\n * @Data 2021/5/24 13:11\n **/\n@Configuration\npublic class LoginFilter implements HandlerInterceptor {\n    /**\n     * 在请求处理之前进行调用（Controller方法调用之前）\n     */\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) {\n//        System.out.println(&quot;执行了TestInterceptor的preHandle方法&quot;);\n        try {\n            //统一拦截（查询当前session是否存在user）(这里user会在每次登陆成功后，写入session)\n            DbAdminUserEntity user=(DbAdminUserEntity)request.getSession().getAttribute(&quot;user&quot;);\n            if(user!=null){\n                return true;\n            }\n            response.sendRedirect(request.getContextPath()+&quot;/&quot;);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return false;//如果设置为false时，被请求时，拦截器执行到此处将不会继续操作\n        //如果设置为true时，请求将会继续执行后面的操作\n    }\n\n    /**\n     * 请求处理之后进行调用，但是在视图被渲染之前（Controller方法调用之后）\n     */\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {\n//         System.out.println(&quot;执行了TestInterceptor的postHandle方法&quot;);\n    }\n\n    /**\n     * 在整个请求结束之后被调用，也就是在DispatcherServlet 渲染了对应的视图之后执行（主要是用于进行资源清理工作）\n     */\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {\n//        System.out.println(&quot;执行了TestInterceptor的afterCompletion方法&quot;);\n    }\n}</pre><p id=\"ube55fc45\" class=\"ne-p\"><br></p><pre data-language=\"java\" id=\"5fdb4ace\" class=\"ne-codeblock\">package com.newamahb.newamahb.utils.config;\n\nimport com.newamahb.newamahb.utils.LoginFilter;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistration;\nimport org.springframework.web.servlet.config.annotation.InterceptorRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n\n/**\n * @ClassName LoginConfig\n * @Author LiuJinshui\n * @Data 2021/5/24 13:34\n **/\n@Configuration\npublic class LoginConfig implements WebMvcConfigurer {\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        //注册TestInterceptor拦截器\n        InterceptorRegistration registration = registry.addInterceptor(new LoginFilter());\n        registration.addPathPatterns(&quot;/**&quot;);                      //所有路径都被拦截\n        registration.excludePathPatterns(               //添加不拦截路径\n                &quot;/&quot;,                            //首页\n                &quot;/amahb/login&quot;,            //登录\n                &quot;/static/**&quot;,            //html静态资源\n                &quot;/js/**&quot;,              //js静态资源\n                &quot;/css/**&quot;,             //css静态资源\n                &quot;/fonts/**&quot;,\n                &quot;/img/**&quot;,\n                &quot;/lib/**&quot;,\n                &quot;/templates/**&quot;\n        );\n    }\n}</pre></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><card type=\"block\" name=\"hr\" value=\"data:undefined\"></card><p data-lake-id=\"u9c8c3f34\" id=\"u9c8c3f34\"><br></p><p data-lake-id=\"ue42b6cb9\" id=\"ue42b6cb9\"><span data-lake-id=\"u5d433549\" id=\"u5d433549\">title: hexo测试<br /></span><span data-lake-id=\"u11a55a75\" id=\"u11a55a75\">date: 2021-06-05 12:05:36<br /></span><span data-lake-id=\"ue501b7d7\" id=\"ue501b7d7\">tags:</span></p><p data-lake-id=\"u94dccbdc\" id=\"u94dccbdc\"><br></p><ul list=\"ua000ef01\"><li fid=\"u0e8b44d1\" data-lake-id=\"u1da14126\" id=\"u1da14126\"><span data-lake-id=\"u38827f8e\" id=\"u38827f8e\">Java<br /></span><span data-lake-id=\"u35379e48\" id=\"u35379e48\">categories:</span></li></ul><ul list=\"u2f73013e\"><li fid=\"u42ec5bb8\" data-lake-id=\"u8b300652\" id=\"u8b300652\"><span data-lake-id=\"uaad3d38d\" id=\"uaad3d38d\">[Spring, SpringMvc]</span></li></ul><card type=\"block\" name=\"hr\" value=\"data:undefined\"></card><h1 data-lake-id=\"df368884\" id=\"df368884\"><span data-lake-id=\"u288f08f9\" id=\"u288f08f9\">前言</span></h1><p data-lake-id=\"ud8a8467e\" id=\"ud8a8467e\"><br></p><blockquote data-lake-id=\"ufa9a8aa0\" id=\"ufa9a8aa0\"><p data-lake-id=\"uef29bae6\" id=\"uef29bae6\"><span data-lake-id=\"u716aad32\" id=\"u716aad32\">介绍针对拦截器怎么使用232323</span></p></blockquote><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%5Cnpackage%20com.newamahb.newamahb.utils%3B%5Cn%5Cnimport%20com.newamahb.newamahb.entity.DbAdminUserEntity%3B%5Cnimport%20org.springframework.context.annotation.Configuration%3B%5Cnimport%20org.springframework.web.servlet.HandlerInterceptor%3B%5Cnimport%20org.springframework.web.servlet.ModelAndView%3B%5Cn%5Cn%5Cnimport%20javax.servlet.http.HttpServletRequest%3B%5Cnimport%20javax.servlet.http.HttpServletResponse%3B%5Cnimport%20java.io.IOException%3B%5Cn%5Cn%2F**%5Cn%20*%20%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%5Cn%20*%5Cn%20*%20%40ClassName%20LoginFilter%5Cn%20*%20%40Author%20LiuJinshui%5Cn%20*%20%40Data%202021%2F5%2F24%2013%3A11%5Cn%20**%2F%5Cn%40Configuration%5Cnpublic%20class%20LoginFilter%20implements%20HandlerInterceptor%20%7B%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%9C%A8%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E4%B9%8B%E5%89%8D%E8%BF%9B%E8%A1%8C%E8%B0%83%E7%94%A8%EF%BC%88Controller%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E4%B9%8B%E5%89%8D%EF%BC%89%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20boolean%20preHandle(HttpServletRequest%20request%2C%20HttpServletResponse%20response%2C%20Object%20handler)%20%7B%5Cn%2F%2F%20%20%20%20%20%20%20%20System.out.println(%5C%22%E6%89%A7%E8%A1%8C%E4%BA%86TestInterceptor%E7%9A%84preHandle%E6%96%B9%E6%B3%95%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E7%BB%9F%E4%B8%80%E6%8B%A6%E6%88%AA%EF%BC%88%E6%9F%A5%E8%AF%A2%E5%BD%93%E5%89%8Dsession%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8user%EF%BC%89(%E8%BF%99%E9%87%8Cuser%E4%BC%9A%E5%9C%A8%E6%AF%8F%E6%AC%A1%E7%99%BB%E9%99%86%E6%88%90%E5%8A%9F%E5%90%8E%EF%BC%8C%E5%86%99%E5%85%A5session)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20DbAdminUserEntity%20user%3D(DbAdminUserEntity)request.getSession().getAttribute(%5C%22user%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if(user!%3Dnull)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20true%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20response.sendRedirect(request.getContextPath()%2B%5C%22%2F%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20e.printStackTrace()%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20return%20false%3B%2F%2F%E5%A6%82%E6%9E%9C%E8%AE%BE%E7%BD%AE%E4%B8%BAfalse%E6%97%B6%EF%BC%8C%E8%A2%AB%E8%AF%B7%E6%B1%82%E6%97%B6%EF%BC%8C%E6%8B%A6%E6%88%AA%E5%99%A8%E6%89%A7%E8%A1%8C%E5%88%B0%E6%AD%A4%E5%A4%84%E5%B0%86%E4%B8%8D%E4%BC%9A%E7%BB%A7%E7%BB%AD%E6%93%8D%E4%BD%9C%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%A6%82%E6%9E%9C%E8%AE%BE%E7%BD%AE%E4%B8%BAtrue%E6%97%B6%EF%BC%8C%E8%AF%B7%E6%B1%82%E5%B0%86%E4%BC%9A%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C%E5%90%8E%E9%9D%A2%E7%9A%84%E6%93%8D%E4%BD%9C%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E4%B9%8B%E5%90%8E%E8%BF%9B%E8%A1%8C%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BD%86%E6%98%AF%E5%9C%A8%E8%A7%86%E5%9B%BE%E8%A2%AB%E6%B8%B2%E6%9F%93%E4%B9%8B%E5%89%8D%EF%BC%88Controller%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E4%B9%8B%E5%90%8E%EF%BC%89%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20postHandle(HttpServletRequest%20request%2C%20HttpServletResponse%20response%2C%20Object%20handler%2C%20ModelAndView%20modelAndView)%20%7B%5Cn%2F%2F%20%20%20%20%20%20%20%20%20System.out.println(%5C%22%E6%89%A7%E8%A1%8C%E4%BA%86TestInterceptor%E7%9A%84postHandle%E6%96%B9%E6%B3%95%5C%22)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%9C%A8%E6%95%B4%E4%B8%AA%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9D%9F%E4%B9%8B%E5%90%8E%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E5%9C%A8DispatcherServlet%20%E6%B8%B2%E6%9F%93%E4%BA%86%E5%AF%B9%E5%BA%94%E7%9A%84%E8%A7%86%E5%9B%BE%E4%B9%8B%E5%90%8E%E6%89%A7%E8%A1%8C%EF%BC%88%E4%B8%BB%E8%A6%81%E6%98%AF%E7%94%A8%E4%BA%8E%E8%BF%9B%E8%A1%8C%E8%B5%84%E6%BA%90%E6%B8%85%E7%90%86%E5%B7%A5%E4%BD%9C%EF%BC%89%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20afterCompletion(HttpServletRequest%20request%2C%20HttpServletResponse%20response%2C%20Object%20handler%2C%20Exception%20ex)%20%7B%5Cn%2F%2F%20%20%20%20%20%20%20%20System.out.println(%5C%22%E6%89%A7%E8%A1%8C%E4%BA%86TestInterceptor%E7%9A%84afterCompletion%E6%96%B9%E6%B3%95%5C%22)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%221fd90e84%22%7D\"></card><p data-lake-id=\"ube55fc45\" id=\"ube55fc45\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22package%20com.newamahb.newamahb.utils.config%3B%5Cn%5Cnimport%20com.newamahb.newamahb.utils.LoginFilter%3B%5Cnimport%20org.springframework.context.annotation.Configuration%3B%5Cnimport%20org.springframework.web.servlet.config.annotation.InterceptorRegistration%3B%5Cnimport%20org.springframework.web.servlet.config.annotation.InterceptorRegistry%3B%5Cnimport%20org.springframework.web.servlet.config.annotation.WebMvcConfigurer%3B%5Cn%5Cn%2F**%5Cn%20*%20%40ClassName%20LoginConfig%5Cn%20*%20%40Author%20LiuJinshui%5Cn%20*%20%40Data%202021%2F5%2F24%2013%3A34%5Cn%20**%2F%5Cn%40Configuration%5Cnpublic%20class%20LoginConfig%20implements%20WebMvcConfigurer%20%7B%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20addInterceptors(InterceptorRegistry%20registry)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E6%B3%A8%E5%86%8CTestInterceptor%E6%8B%A6%E6%88%AA%E5%99%A8%5Cn%20%20%20%20%20%20%20%20InterceptorRegistration%20registration%20%3D%20registry.addInterceptor(new%20LoginFilter())%3B%5Cn%20%20%20%20%20%20%20%20registration.addPathPatterns(%5C%22%2F**%5C%22)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E9%83%BD%E8%A2%AB%E6%8B%A6%E6%88%AA%5Cn%20%20%20%20%20%20%20%20registration.excludePathPatterns(%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E6%B7%BB%E5%8A%A0%E4%B8%8D%E6%8B%A6%E6%88%AA%E8%B7%AF%E5%BE%84%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2F%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E9%A6%96%E9%A1%B5%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Famahb%2Flogin%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E7%99%BB%E5%BD%95%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fstatic%2F**%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fhtml%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fjs%2F**%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fjs%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fcss%2F**%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fcss%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Ffonts%2F**%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fimg%2F**%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Flib%2F**%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Ftemplates%2F**%5C%22%5Cn%20%20%20%20%20%20%20%20)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%225fdb4ace%22%7D\"></card>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"fixed\" /><card type=\"block\" name=\"hr\" value=\"data:undefined\"></card><p data-lake-id=\"u9c8c3f34\" id=\"u9c8c3f34\"><br></p><p data-lake-id=\"ue42b6cb9\" id=\"ue42b6cb9\"><span data-lake-id=\"u5d433549\" id=\"u5d433549\">title: hexo测试<br /></span><span data-lake-id=\"u11a55a75\" id=\"u11a55a75\">date: 2021-06-05 12:05:36<br /></span><span data-lake-id=\"ue501b7d7\" id=\"ue501b7d7\">tags:</span></p><p data-lake-id=\"u94dccbdc\" id=\"u94dccbdc\"><br></p><ul list=\"ua000ef01\"><li fid=\"u0e8b44d1\" data-lake-id=\"u1da14126\" id=\"u1da14126\"><span data-lake-id=\"u38827f8e\" id=\"u38827f8e\">Java<br /></span><span data-lake-id=\"u35379e48\" id=\"u35379e48\">categories:</span></li></ul><ul list=\"u2f73013e\"><li fid=\"u42ec5bb8\" data-lake-id=\"u8b300652\" id=\"u8b300652\"><span data-lake-id=\"uaad3d38d\" id=\"uaad3d38d\">[Spring, SpringMvc]</span></li></ul><card type=\"block\" name=\"hr\" value=\"data:undefined\"></card><h1 data-lake-id=\"df368884\" id=\"df368884\"><span data-lake-id=\"u288f08f9\" id=\"u288f08f9\">前言</span></h1><p data-lake-id=\"ud8a8467e\" id=\"ud8a8467e\"><br></p><blockquote data-lake-id=\"ufa9a8aa0\" id=\"ufa9a8aa0\"><p data-lake-id=\"uef29bae6\" id=\"uef29bae6\"><span data-lake-id=\"u716aad32\" id=\"u716aad32\">介绍针对拦截器怎么使用232323</span></p></blockquote><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22%5Cnpackage%20com.newamahb.newamahb.utils%3B%5Cn%5Cnimport%20com.newamahb.newamahb.entity.DbAdminUserEntity%3B%5Cnimport%20org.springframework.context.annotation.Configuration%3B%5Cnimport%20org.springframework.web.servlet.HandlerInterceptor%3B%5Cnimport%20org.springframework.web.servlet.ModelAndView%3B%5Cn%5Cn%5Cnimport%20javax.servlet.http.HttpServletRequest%3B%5Cnimport%20javax.servlet.http.HttpServletResponse%3B%5Cnimport%20java.io.IOException%3B%5Cn%5Cn%2F**%5Cn%20*%20%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%5Cn%20*%5Cn%20*%20%40ClassName%20LoginFilter%5Cn%20*%20%40Author%20LiuJinshui%5Cn%20*%20%40Data%202021%2F5%2F24%2013%3A11%5Cn%20**%2F%5Cn%40Configuration%5Cnpublic%20class%20LoginFilter%20implements%20HandlerInterceptor%20%7B%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%9C%A8%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E4%B9%8B%E5%89%8D%E8%BF%9B%E8%A1%8C%E8%B0%83%E7%94%A8%EF%BC%88Controller%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E4%B9%8B%E5%89%8D%EF%BC%89%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20boolean%20preHandle(HttpServletRequest%20request%2C%20HttpServletResponse%20response%2C%20Object%20handler)%20%7B%5Cn%2F%2F%20%20%20%20%20%20%20%20System.out.println(%5C%22%E6%89%A7%E8%A1%8C%E4%BA%86TestInterceptor%E7%9A%84preHandle%E6%96%B9%E6%B3%95%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20try%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E7%BB%9F%E4%B8%80%E6%8B%A6%E6%88%AA%EF%BC%88%E6%9F%A5%E8%AF%A2%E5%BD%93%E5%89%8Dsession%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8user%EF%BC%89(%E8%BF%99%E9%87%8Cuser%E4%BC%9A%E5%9C%A8%E6%AF%8F%E6%AC%A1%E7%99%BB%E9%99%86%E6%88%90%E5%8A%9F%E5%90%8E%EF%BC%8C%E5%86%99%E5%85%A5session)%5Cn%20%20%20%20%20%20%20%20%20%20%20%20DbAdminUserEntity%20user%3D(DbAdminUserEntity)request.getSession().getAttribute(%5C%22user%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20if(user!%3Dnull)%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20true%3B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20%20%20%20%20response.sendRedirect(request.getContextPath()%2B%5C%22%2F%5C%22)%3B%5Cn%20%20%20%20%20%20%20%20%7D%20catch%20(IOException%20e)%20%7B%5Cn%20%20%20%20%20%20%20%20%20%20%20%20e.printStackTrace()%3B%5Cn%20%20%20%20%20%20%20%20%7D%5Cn%20%20%20%20%20%20%20%20return%20false%3B%2F%2F%E5%A6%82%E6%9E%9C%E8%AE%BE%E7%BD%AE%E4%B8%BAfalse%E6%97%B6%EF%BC%8C%E8%A2%AB%E8%AF%B7%E6%B1%82%E6%97%B6%EF%BC%8C%E6%8B%A6%E6%88%AA%E5%99%A8%E6%89%A7%E8%A1%8C%E5%88%B0%E6%AD%A4%E5%A4%84%E5%B0%86%E4%B8%8D%E4%BC%9A%E7%BB%A7%E7%BB%AD%E6%93%8D%E4%BD%9C%5Cn%20%20%20%20%20%20%20%20%2F%2F%E5%A6%82%E6%9E%9C%E8%AE%BE%E7%BD%AE%E4%B8%BAtrue%E6%97%B6%EF%BC%8C%E8%AF%B7%E6%B1%82%E5%B0%86%E4%BC%9A%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C%E5%90%8E%E9%9D%A2%E7%9A%84%E6%93%8D%E4%BD%9C%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E8%AF%B7%E6%B1%82%E5%A4%84%E7%90%86%E4%B9%8B%E5%90%8E%E8%BF%9B%E8%A1%8C%E8%B0%83%E7%94%A8%EF%BC%8C%E4%BD%86%E6%98%AF%E5%9C%A8%E8%A7%86%E5%9B%BE%E8%A2%AB%E6%B8%B2%E6%9F%93%E4%B9%8B%E5%89%8D%EF%BC%88Controller%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E4%B9%8B%E5%90%8E%EF%BC%89%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20postHandle(HttpServletRequest%20request%2C%20HttpServletResponse%20response%2C%20Object%20handler%2C%20ModelAndView%20modelAndView)%20%7B%5Cn%2F%2F%20%20%20%20%20%20%20%20%20System.out.println(%5C%22%E6%89%A7%E8%A1%8C%E4%BA%86TestInterceptor%E7%9A%84postHandle%E6%96%B9%E6%B3%95%5C%22)%3B%5Cn%20%20%20%20%7D%5Cn%5Cn%20%20%20%20%2F**%5Cn%20%20%20%20%20*%20%E5%9C%A8%E6%95%B4%E4%B8%AA%E8%AF%B7%E6%B1%82%E7%BB%93%E6%9D%9F%E4%B9%8B%E5%90%8E%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E5%9C%A8DispatcherServlet%20%E6%B8%B2%E6%9F%93%E4%BA%86%E5%AF%B9%E5%BA%94%E7%9A%84%E8%A7%86%E5%9B%BE%E4%B9%8B%E5%90%8E%E6%89%A7%E8%A1%8C%EF%BC%88%E4%B8%BB%E8%A6%81%E6%98%AF%E7%94%A8%E4%BA%8E%E8%BF%9B%E8%A1%8C%E8%B5%84%E6%BA%90%E6%B8%85%E7%90%86%E5%B7%A5%E4%BD%9C%EF%BC%89%5Cn%20%20%20%20%20*%2F%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20afterCompletion(HttpServletRequest%20request%2C%20HttpServletResponse%20response%2C%20Object%20handler%2C%20Exception%20ex)%20%7B%5Cn%2F%2F%20%20%20%20%20%20%20%20System.out.println(%5C%22%E6%89%A7%E8%A1%8C%E4%BA%86TestInterceptor%E7%9A%84afterCompletion%E6%96%B9%E6%B3%95%5C%22)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%221fd90e84%22%7D\"></card><p data-lake-id=\"ube55fc45\" id=\"ube55fc45\"><br></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22java%22%2C%22code%22%3A%22package%20com.newamahb.newamahb.utils.config%3B%5Cn%5Cnimport%20com.newamahb.newamahb.utils.LoginFilter%3B%5Cnimport%20org.springframework.context.annotation.Configuration%3B%5Cnimport%20org.springframework.web.servlet.config.annotation.InterceptorRegistration%3B%5Cnimport%20org.springframework.web.servlet.config.annotation.InterceptorRegistry%3B%5Cnimport%20org.springframework.web.servlet.config.annotation.WebMvcConfigurer%3B%5Cn%5Cn%2F**%5Cn%20*%20%40ClassName%20LoginConfig%5Cn%20*%20%40Author%20LiuJinshui%5Cn%20*%20%40Data%202021%2F5%2F24%2013%3A34%5Cn%20**%2F%5Cn%40Configuration%5Cnpublic%20class%20LoginConfig%20implements%20WebMvcConfigurer%20%7B%5Cn%20%20%20%20%40Override%5Cn%20%20%20%20public%20void%20addInterceptors(InterceptorRegistry%20registry)%20%7B%5Cn%20%20%20%20%20%20%20%20%2F%2F%E6%B3%A8%E5%86%8CTestInterceptor%E6%8B%A6%E6%88%AA%E5%99%A8%5Cn%20%20%20%20%20%20%20%20InterceptorRegistration%20registration%20%3D%20registry.addInterceptor(new%20LoginFilter())%3B%5Cn%20%20%20%20%20%20%20%20registration.addPathPatterns(%5C%22%2F**%5C%22)%3B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E6%89%80%E6%9C%89%E8%B7%AF%E5%BE%84%E9%83%BD%E8%A2%AB%E6%8B%A6%E6%88%AA%5Cn%20%20%20%20%20%20%20%20registration.excludePathPatterns(%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E6%B7%BB%E5%8A%A0%E4%B8%8D%E6%8B%A6%E6%88%AA%E8%B7%AF%E5%BE%84%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2F%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E9%A6%96%E9%A1%B5%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Famahb%2Flogin%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%2F%2F%E7%99%BB%E5%BD%95%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fstatic%2F**%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fhtml%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fjs%2F**%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fjs%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fcss%2F**%5C%22%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%2F%2Fcss%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Ffonts%2F**%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Fimg%2F**%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Flib%2F**%5C%22%2C%5Cn%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%5C%22%2Ftemplates%2F**%5C%22%5Cn%20%20%20%20%20%20%20%20)%3B%5Cn%20%20%20%20%7D%5Cn%7D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%225fdb4ace%22%7D\"></card>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-06-05T08:18:53.000Z",
    "deleted_at": null,
    "created_at": "2021-06-05T08:12:03.000Z",
    "updated_at": "2021-06-05T08:18:53.000Z",
    "published_at": "2021-06-05T08:18:53.000Z",
    "first_published_at": "2021-06-05T08:12:03.000Z",
    "word_count": 445,
    "cover": null,
    "description": "title: hexo测试date: 2021-06-05 12:05:36tags:Javacategories:[Spring, SpringMvc]前言介绍针对拦截器怎么使用232323 package com.newamahb.newamahb.utils;  import com.n...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 46634553,
    "slug": "mvmrgr",
    "title": "sds",
    "book_id": 20079160,
    "book": {
      "id": 20079160,
      "type": "Book",
      "slug": "ytm2sv",
      "name": "博客",
      "user_id": 8425642,
      "description": "问题的发现与解决",
      "creator_id": 8425642,
      "public": 1,
      "items_count": 4,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-06-05T08:18:53.086Z",
      "updated_at": "2021-06-05T08:18:53.000Z",
      "created_at": "2021-05-23T14:02:43.000Z",
      "namespace": "rainoprime/ytm2sv",
      "user": {
        "id": 8425642,
        "type": "User",
        "login": "rainoprime",
        "name": "RainoPrime",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
        "books_count": 7,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2020-12-21T10:17:57.000Z",
        "updated_at": "2021-06-05T08:12:03.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 8425642,
    "creator": {
      "id": 8425642,
      "type": "User",
      "login": "rainoprime",
      "name": "RainoPrime",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
      "books_count": 7,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-12-21T10:17:57.000Z",
      "updated_at": "2021-06-05T08:12:03.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "sdsdsd\n",
    "body_draft": "sdsdsd\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C6%5D%2C%5B0%2C0%2C6%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">sdsdsd</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">sdsdsd<cursor /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">sdsdsd<cursor /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-06-05T07:56:59.000Z",
    "deleted_at": null,
    "created_at": "2021-06-05T07:56:55.000Z",
    "updated_at": "2021-06-05T07:56:59.000Z",
    "published_at": "2021-06-05T07:56:59.000Z",
    "first_published_at": "2021-06-05T07:56:59.000Z",
    "word_count": 1,
    "cover": null,
    "description": "sdsdsd",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 46634034,
    "slug": "aw7mi3",
    "title": "asdasd",
    "book_id": 20079160,
    "book": {
      "id": 20079160,
      "type": "Book",
      "slug": "ytm2sv",
      "name": "博客",
      "user_id": 8425642,
      "description": "问题的发现与解决",
      "creator_id": 8425642,
      "public": 1,
      "items_count": 4,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-06-05T08:18:53.086Z",
      "updated_at": "2021-06-05T08:18:53.000Z",
      "created_at": "2021-05-23T14:02:43.000Z",
      "namespace": "rainoprime/ytm2sv",
      "user": {
        "id": 8425642,
        "type": "User",
        "login": "rainoprime",
        "name": "RainoPrime",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
        "books_count": 7,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2020-12-21T10:17:57.000Z",
        "updated_at": "2021-06-05T08:12:03.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 8425642,
    "creator": {
      "id": 8425642,
      "type": "User",
      "login": "rainoprime",
      "name": "RainoPrime",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
      "books_count": 7,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-12-21T10:17:57.000Z",
      "updated_at": "2021-06-05T08:12:03.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "adasdasdasd\n",
    "body_draft": "adasdasdasd\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C11%5D%2C%5B0%2C0%2C11%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">adasdasdasd</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">adasdasdasd<cursor /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">adasdasdasd<cursor /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-06-05T07:45:14.000Z",
    "deleted_at": null,
    "created_at": "2021-06-05T07:45:06.000Z",
    "updated_at": "2021-06-05T07:45:14.000Z",
    "published_at": "2021-06-05T07:45:14.000Z",
    "first_published_at": "2021-06-05T07:45:14.000Z",
    "word_count": 1,
    "cover": null,
    "description": "adasdasdasd",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 45982041,
    "slug": "xqb6qu",
    "title": "postman的JSON请求格式",
    "book_id": 20079160,
    "book": {
      "id": 20079160,
      "type": "Book",
      "slug": "ytm2sv",
      "name": "博客",
      "user_id": 8425642,
      "description": "问题的发现与解决",
      "creator_id": 8425642,
      "public": 1,
      "items_count": 3,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-06-05T09:14:03.271Z",
      "updated_at": "2021-06-05T09:14:03.000Z",
      "created_at": "2021-05-23T14:02:43.000Z",
      "namespace": "rainoprime/ytm2sv",
      "user": {
        "id": 8425642,
        "type": "User",
        "login": "rainoprime",
        "name": "RainoPrime",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
        "books_count": 7,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2020-12-21T10:17:57.000Z",
        "updated_at": "2021-06-05T09:05:49.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 8425642,
    "creator": {
      "id": 8425642,
      "type": "User",
      "login": "rainoprime",
      "name": "RainoPrime",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
      "books_count": 7,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-12-21T10:17:57.000Z",
      "updated_at": "2021-06-05T09:05:49.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "<a name=\"8qI8Q\"></a>\n# List<对象>请求s\n[]为一个List集合，{}为一个对象Duixdsfsdfd\n```json\n[\n  {\n      \"字段1\":1,\n      \"字段2\":\"ssss\",\n      \"字段3\": 1,\n      \"字段4\":1,\n      \"字段5\":\"ss\"\n  },\n   {\n      \"字段1\":1,\n      \"字段2\":\"ssss\",\n      \"字段3\": 2,\n      \"字段4\":3,\n      \"字段5\":\"sdsss\"\n  }\n]\n```\n<a name=\"Xta8R\"></a>\n# List<Long>请求\n```json\n[ \"1\",\"2\",\"3\" ]\n```\n\n\n",
    "body_draft": "<a name=\"8qI8Q\"></a>\n# List<对象>请求s\n[]为一个List集合，{}为一个对象Duixdsfsdfd\n```json\n[\n  {\n      \"字段1\":1,\n      \"字段2\":\"ssss\",\n      \"字段3\": 1,\n      \"字段4\":1,\n      \"字段5\":\"ss\"\n  },\n   {\n      \"字段1\":1,\n      \"字段2\":\"ssss\",\n      \"字段3\": 2,\n      \"字段4\":3,\n      \"字段5\":\"sdsss\"\n  }\n]\n```\n<a name=\"Xta8R\"></a>\n# List<Long>请求\n```json\n[ \"1\",\"2\",\"3\" ]\n```\n\n\n",
    "body_html": "<!doctype html><div class=\"lake-content\" typography=\"classic\"><h1 id=\"8qI8Q\"><span class=\"ne-text\">List&lt;对象&gt;请求s</span></h1><p id=\"f6489f9145d412a883c3b9fc2192df98\" class=\"ne-p\" style=\"text-indent: 2em\"><span class=\"ne-text\">[]为一个List集合，{}为一个对象Duixdsfsdfd</span></p><pre data-language=\"json\" id=\"GpV8J\" class=\"ne-codeblock\">[\n  {\n      &quot;字段1&quot;:1,\n      &quot;字段2&quot;:&quot;ssss&quot;,\n      &quot;字段3&quot;: 1,\n      &quot;字段4&quot;:1,\n      &quot;字段5&quot;:&quot;ss&quot;\n  },\n   {\n      &quot;字段1&quot;:1,\n      &quot;字段2&quot;:&quot;ssss&quot;,\n      &quot;字段3&quot;: 2,\n      &quot;字段4&quot;:3,\n      &quot;字段5&quot;:&quot;sdsss&quot;\n  }\n]</pre><h1 id=\"Xta8R\"><span class=\"ne-text\">List&lt;Long&gt;请求</span></h1><pre data-language=\"json\" id=\"J8bCo\" class=\"ne-codeblock\">[ &quot;1&quot;,&quot;2&quot;,&quot;3&quot; ]</pre><p id=\"9148b80c5aa1cce077796458a2585ab9\" class=\"ne-p\"><br></p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h1 data-lake-id=\"8qI8Q\" id=\"8qI8Q\"><span data-lake-id=\"uc8b20369\" id=\"uc8b20369\">List&lt;对象&gt;请求s</span></h1><p data-lake-id=\"f6489f9145d412a883c3b9fc2192df98\" id=\"f6489f9145d412a883c3b9fc2192df98\" style=\"text-indent: 2em\"><span data-lake-id=\"u22e55b4b\" id=\"u22e55b4b\">[]为一个List集合，{}为一个对象Duixdsfsdfd</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%5B%5Cn%20%20%7B%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B51%5C%22%3A1%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B52%5C%22%3A%5C%22ssss%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B53%5C%22%3A%201%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B54%5C%22%3A1%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B55%5C%22%3A%5C%22ss%5C%22%5Cn%20%20%7D%2C%5Cn%20%20%20%7B%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B51%5C%22%3A1%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B52%5C%22%3A%5C%22ssss%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B53%5C%22%3A%202%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B54%5C%22%3A3%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B55%5C%22%3A%5C%22sdsss%5C%22%5Cn%20%20%7D%5Cn%5D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22GpV8J%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h1 data-lake-id=\"Xta8R\" id=\"Xta8R\"><span data-lake-id=\"uff6b0476\" id=\"uff6b0476\">List&lt;Long&gt;请求</span></h1><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%5B%20%5C%221%5C%22%2C%5C%222%5C%22%2C%5C%223%5C%22%20%5D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22J8bCo%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"9148b80c5aa1cce077796458a2585ab9\" id=\"9148b80c5aa1cce077796458a2585ab9\"><br></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"typography\" content=\"classic\" /><meta name=\"viewport\" content=\"adapt\" /><h1 data-lake-id=\"8qI8Q\" id=\"8qI8Q\"><span data-lake-id=\"uc8b20369\" id=\"uc8b20369\">List&lt;对象&gt;请求s</span></h1><p data-lake-id=\"f6489f9145d412a883c3b9fc2192df98\" id=\"f6489f9145d412a883c3b9fc2192df98\" style=\"text-indent: 2em\"><span data-lake-id=\"u22e55b4b\" id=\"u22e55b4b\">[]为一个List集合，{}为一个对象Duixdsfsdfd</span></p><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%5B%5Cn%20%20%7B%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B51%5C%22%3A1%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B52%5C%22%3A%5C%22ssss%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B53%5C%22%3A%201%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B54%5C%22%3A1%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B55%5C%22%3A%5C%22ss%5C%22%5Cn%20%20%7D%2C%5Cn%20%20%20%7B%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B51%5C%22%3A1%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B52%5C%22%3A%5C%22ssss%5C%22%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B53%5C%22%3A%202%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B54%5C%22%3A3%2C%5Cn%20%20%20%20%20%20%5C%22%E5%AD%97%E6%AE%B55%5C%22%3A%5C%22sdsss%5C%22%5Cn%20%20%7D%5Cn%5D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22GpV8J%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><h1 data-lake-id=\"Xta8R\" id=\"Xta8R\"><span data-lake-id=\"uff6b0476\" id=\"uff6b0476\">List&lt;Long&gt;请求</span></h1><card type=\"inline\" name=\"codeblock\" value=\"data:%7B%22mode%22%3A%22json%22%2C%22code%22%3A%22%5B%20%5C%221%5C%22%2C%5C%222%5C%22%2C%5C%223%5C%22%20%5D%22%2C%22autoWrap%22%3Afalse%2C%22theme%22%3A%22default%22%2C%22__spacing%22%3A%22both%22%2C%22heightLimit%22%3Atrue%2C%22id%22%3A%22J8bCo%22%2C%22margin%22%3A%7B%22top%22%3Atrue%2C%22bottom%22%3Atrue%7D%7D\"></card><p data-lake-id=\"9148b80c5aa1cce077796458a2585ab9\" id=\"9148b80c5aa1cce077796458a2585ab9\"><br></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-06-05T09:14:03.000Z",
    "deleted_at": null,
    "created_at": "2021-05-25T10:53:51.000Z",
    "updated_at": "2021-06-05T09:14:03.000Z",
    "published_at": "2021-06-05T09:14:03.000Z",
    "first_published_at": "2021-05-25T10:56:39.000Z",
    "word_count": 76,
    "cover": null,
    "description": "List<对象>请求s[]为一个List集合，{}为一个对象Duixdsfsdfd[   {       \"字段1\":1,       \"字段2\":\"ssss\",       \"字段3\": 1,       \"字段4\":1,       \"字段5\":\"ss\"   },    {       \"...",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  },
  {
    "id": 46638648,
    "slug": "ve07xn",
    "title": "测试语雀",
    "book_id": 20079160,
    "book": {
      "id": 20079160,
      "type": "Book",
      "slug": "ytm2sv",
      "name": "博客",
      "user_id": 8425642,
      "description": "问题的发现与解决",
      "creator_id": 8425642,
      "public": 1,
      "items_count": 3,
      "likes_count": 0,
      "watches_count": 1,
      "content_updated_at": "2021-06-05T09:14:03.271Z",
      "updated_at": "2021-06-05T09:14:03.000Z",
      "created_at": "2021-05-23T14:02:43.000Z",
      "namespace": "rainoprime/ytm2sv",
      "user": {
        "id": 8425642,
        "type": "User",
        "login": "rainoprime",
        "name": "RainoPrime",
        "description": null,
        "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
        "books_count": 7,
        "public_books_count": 1,
        "followers_count": 0,
        "following_count": 0,
        "created_at": "2020-12-21T10:17:57.000Z",
        "updated_at": "2021-06-05T09:05:49.000Z",
        "_serializer": "v2.user"
      },
      "_serializer": "v2.book"
    },
    "user_id": 8425642,
    "creator": {
      "id": 8425642,
      "type": "User",
      "login": "rainoprime",
      "name": "RainoPrime",
      "description": null,
      "avatar_url": "https://cdn.nlark.com/yuque/0/2020/png/anonymous/1608545863356-de461390-56e2-48ca-a5dd-6daa0ea4776b.png",
      "books_count": 7,
      "public_books_count": 1,
      "followers_count": 0,
      "following_count": 0,
      "created_at": "2020-12-21T10:17:57.000Z",
      "updated_at": "2021-06-05T09:05:49.000Z",
      "_serializer": "v2.user"
    },
    "format": "lake",
    "body": "测试语雀\n",
    "body_draft": "测试语雀\n",
    "body_html": "<!doctype html><div class=\"lake-content-editor-core lake-engine lake-typography-classic\" data-lake-element=\"root\" data-selection-undefined=\"%7B%22path%22%3A%5B%5B0%2C0%2C4%5D%2C%5B0%2C0%2C4%5D%5D%2C%22active%22%3Atrue%7D\"><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\" style=\"font-size: 14px; color: rgb(38, 38, 38); line-height: 1.74; letter-spacing: 0.05em; outline-style: none; overflow-wrap: break-word; margin: 0px;\">测试语雀</p></div>",
    "body_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">测试语雀<cursor /></p>",
    "body_draft_lake": "<!doctype lake><meta name=\"doc-version\" content=\"1\" /><meta name=\"viewport\" content=\"adapt\" /><meta name=\"typography\" content=\"classic\" /><p data-lake-id=\"a20d224c568e48b9d67847a2c66a8c01_p_0\">测试语雀<cursor /></p>",
    "public": 1,
    "status": 1,
    "view_status": 0,
    "read_status": 1,
    "likes_count": 0,
    "comments_count": 0,
    "content_updated_at": "2021-06-05T09:06:08.000Z",
    "deleted_at": null,
    "created_at": "2021-06-05T09:05:49.000Z",
    "updated_at": "2021-06-05T09:06:08.000Z",
    "published_at": "2021-06-05T09:06:08.000Z",
    "first_published_at": "2021-06-05T09:06:08.000Z",
    "word_count": 4,
    "cover": null,
    "description": "测试语雀",
    "custom_description": null,
    "hits": 0,
    "_serializer": "v2.doc_detail"
  }
]